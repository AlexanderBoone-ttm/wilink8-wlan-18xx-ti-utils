
The calibrator and other useful utilities for TI wireless solution,
based on wl12xx driver.


--- Build procedure

Make sure your kernel is configured to support nl80211 testmode commands.
(NL80211_TESTMODE=y)
There is dependents on libnl package.

Set follow environment variables:
export NFSROOT=<path to roofs of a target where installed libnl library>
export CROSS_COMPILE=arm-none-linux-gnueabi-
make


--- Running PLT utility

1. Have to prepare NVS reference file
	a. Boot the system
	b. Create NVS reference file
		./calibrator set ref_nvs ./<ini file>
	c. Copy newly created NVS file to the proper place:
		cp new-nvs.bin /lib/firmware/wl1271-nvs.bin
2. Calibrate the system
	a. Reboot the system
		While booting the system do not start wireless device
		interface. Make sure it is down, by running 
		command: `ifconfig'.
	b. Calibrate
		./calibrator plt calibrate
	c. Copy newly created file to the proper place
		cp new-nvs.bin /lib/firmware/wl1271-nvs.bin
3. Reboot the system

--- INI files

It is very important to select INI file according to the firmware (see below).

Those files organized in 3 directories:
station - currently supported station firmware (wl1271-fw.bin)
access_point - currently supported access point (wl1271-fw-ap.bin)
development - files for firmware under release stage 

--- Firmware files

The firmware files can be reached from git repository
git://git.kernel.org/pub/scm/linux/kernel/git/dwmw2/linux-firmware.git
under directory ti-connectivity.
There are 2 firmware files there:
wl1271-fw.bin    - station firmware
wl1271-fw-ap.bin    - access point firmware

--- Detailed instructions for calibrator procedures

	TxBip procedure (calibration)

It is importand to set MAC address to an interface before the procedure.
For example, `ifconfig wlan0 hw ether xx:xx:xx:xx:xx:xx'
There are 2 ways to do it - short where all parameters has default values and
full where you have to set all parameters manualy.

Short way:
calibrator plt calibrate

Full way:
calibrator wlan0 plt power_mode on
calibrator wlan0 plt ref_point <voltage> <power> <subband>
calibrator wlan0 plt tx_bip <0|1> <0|1> <0|1> <0|1> <0|1> <0|1> <0|1> <0|1>
calibrator wlan0 plt power_mode off

Result of this procedure is new NVS file created localy ./new-nvs.bin
In order to use it, copy the file to /lib/firmware/wl1271-nvs.bin and reload.

	TxCont procedure

calibrator wlan0 plt power_mode on
calibrator wlan0 plt tune_channel <band> <channel>
calibrator wlan0 plt tx_cont <delay> <rate> <size> <amount> <power> <seed> <pkt mode> <DC on/off> <gi> <preamble> <type> <scramble> <clpc> <seq nbr mode> <dest mac>
calibrator wlan0 plt tx_stop
calibrator wlan0 plt power_mode off

	RxStat procedure

There are 2 ways to do it - short where all parameters has default values and
full where you have to set all parameters manualy.

Short way:
calibrator plt rx_statistics

In the short way each time the statistics will be reseted.

Full way:
calibrator wlan0 plt power_mode on
calibrator wlan0 plt start_rx_statcs
calibrator wlan0 plt get_rx_statcs
calibrator wlan0 plt stop_rx_statcs
calibrator wlan0 plt power_mode off

While willing to reset the statistic run:
calibrator wlan0 plt reset_rx_statcs

	Miscelanious procedures

Read MAC address from NVS file:
calibrator get nvs_mac <nvs filename>

Set MAC address in NVS file:
calibrator set nvs_mac <mac addr xx:xx:xx:xx:xx:xx> <nvs file>

Push local NVS to the system:
calibrator phy <phyname> set push_nvs <nvs filename>


-------------------------------------------------------------------------------

The project can be accessed from git repository:
	git clone git://github.com/gxk/ti-utils.git

Please send all patches to Gery Kahn <geryk@ti.com>
and CC linux-wireless@vger.kernel.org for community review.

